generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  email              String               @unique
  firstName          String?
  lastName           String?
  googleId           String?              @unique
  Missionary         Missionary[]
  ChurchOrganization ChurchOrganization[]
}

model Missions {
  id                   String              @id @default(auto()) @map("_id") @db.ObjectId
  createdAt            DateTime            @default(now())
  updatedAt            DateTime            @updatedAt
  title                String
  missionaries         Missionary[]        @relation(fields: [missionaryIds], references: [id])
  missionaryIds        String[]            @db.ObjectId
  ChurchOrganization   ChurchOrganization? @relation(fields: [churchOrganizationId], references: [id])
  churchOrganizationId String?             @db.ObjectId
  beginDate            DateTime
  endDate              DateTime?
  description          String?
  location             String?
  sensitive            Boolean?            @default(false)
}

model Missionary {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  user       User?      @relation(fields: [userId], references: [id])
  firstName  String?
  middleName String?
  lastName   String?
  userId     String?    @db.ObjectId
  phone      String?
  email      String?
  address    String?
  city       String?
  state      String?
  zip        String?
  country    String?
  missions   Missions[] @relation(fields: [missionIds], references: [id])
  missionIds String[]   @db.ObjectId
}

model ChurchOrganization {
  id                   String               @id @default(auto()) @map("_id") @db.ObjectId
  createdAt            DateTime             @default(now())
  createdBy            User                 @relation(fields: [createdById], references: [id])
  createdById          String               @db.ObjectId
  updatedAt            DateTime             @updatedAt
  name                 String
  city                 String
  state                String
  zip                  String
  parentOrganizationId String?              @db.ObjectId
  parentOrganization   ChurchOrganization?  @relation("OrgChurch", fields: [parentOrganizationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  associations         ChurchOrganization[] @relation("OrgChurch")

  missions Missions[]
}
